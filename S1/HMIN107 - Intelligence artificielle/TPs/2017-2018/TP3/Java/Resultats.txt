#####################################EXERCICE 1###################################################
GENERATING KNOWLEDGE BASE
FACTS BASE: 2 facts
Facts : { Cruel('Wolf') ; Herbivore('Goat') }
Terms : < 'Goat' , 'Wolf' >

RULES
R1: Cruel(x) => Carnivore(x)
R2: Herbivore(x) => Eat(x,'Grass')
R3: Carnivore(x);Herbivore(y) => Eat(x,y)
R4: Carnivore(x) => Drink(x,'Water')
R5: Herbivore(x) => Drink(x,'Water')
R6: Eat(x,y) => Consume(x,y)
R7: Drink(x,y) => Consume(x,y)

SATURATED FACTS BASE: 11 facts
Facts : { Consume('Goat','Grass') ; Consume('Goat','Water') ; Consume('Wolf','Goat') ; Consume('Wolf','Water') ; Cruel('Wolf') ; Eat('Goat','Grass') ; Eat('Wolf','Goat') ; Drink('Goat','Water') ; Drink('Wolf','Water') ; Herbivore('Goat') ; Carnivore('Wolf') }
Terms : < 'Wolf' , 'Goat' , 'Grass' , 'Water' >

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
Drink(x,y)
Homomorphisms found :
{x='Goat', y='Water'}
{x='Wolf', y='Water'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
Consume(x,'Water')
Homomorphisms found :
{x='Goat'}
{x='Wolf'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
Carnivore(x);Herbivore(y);Eat(x,y)
Homomorphisms found :
{x='Wolf', y='Goat'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
Herbivore(x);Carnivore(y);Eat(x,y)
No homomorphisms found for this query
##################################################################################################

#####################################EXERCICE 2###################################################
GENERATING KNOWLEDGE BASE
FACTS BASE: 12 facts
Facts : { f('J') ; f('A') ; f('I') ; h('L') ; h('O') ; h('P') ; marieA('J','L') ; marieA('O','J') ; parents('O','J','L') ; parents('A','O','J') ; parents('I','O','J') ; parents('P','J','O') }
Terms : < 'J' , 'L' , 'O' , 'A' , 'I' , 'P' >

RULES
R1: marieA(x,y) => marieA(y,x)
R2: parents(x,y,z) => parents(x,z,y)
R3: parents(x,y,z);h(y) => aPere(x,y)
R4: parents(x,y,z);f(y) => aMere(x,y)
R5: parents(x,y,z);aMere(y,t) => aGdMere(x,t)
R6: parents(x,y,z);aPere(y,t) => aGdPere(x,t)
R7: parents(x,y,z);parents(u,y,t) => FetS(x,u)
R8: FetS(x,y) => FetS(y,x)
R9: parents(x,y,z) => age(y,'Adulte')
R10: parents(x,y,'O') => traumatise(x)

SATURATED FACTS BASE: 54 facts
Facts : { aGdMere('A','J') ; aGdMere('I','J') ; aGdMere('P','J') ; traumatise('P') ; traumatise('A') ; traumatise('I') ; aPere('A','O') ; aPere('I','O') ; aPere('O','L') ; aPere('P','O') ; f('J') ; f('A') ; f('I') ; aMere('O','J') ; aMere('P','J') ; aMere('A','J') ; aMere('I','J') ; h('L') ; h('O') ; h('P') ; marieA('J','L') ; marieA('O','J') ; marieA('L','J') ; marieA('J','O') ; aGdPere('A','L') ; aGdPere('I','L') ; aGdPere('P','L') ; age('J','Adulte') ; age('O','Adulte') ; age('L','Adulte') ; parents('O','J','L') ; parents('A','O','J') ; parents('I','O','J') ; parents('P','J','O') ; parents('O','L','J') ; parents('A','J','O') ; parents('I','J','O') ; parents('P','O','J') ; FetS('O','O') ; FetS('P','O') ; FetS('A','A') ; FetS('I','A') ; FetS('A','I') ; FetS('I','I') ; FetS('O','P') ; FetS('P','P') ; FetS('A','O') ; FetS('I','O') ; FetS('P','A') ; FetS('P','I') ; FetS('A','P') ; FetS('I','P') ; FetS('O','A') ; FetS('O','I') }
Terms : < 'J' , 'A' , 'I' , 'L' , 'O' , 'P' , 'Adulte' >

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
aMere(x,y);h(x)
Homomorphisms found :
{x='O', y='J'}
{x='P', y='J'}
##################################################################################################

#####################################EXERCICE 3###################################################
Question 1:
GENERATING KNOWLEDGE BASE: 2 facts
FACTS BASE
Facts : { p('A','B') ; s('A','B') }
Terms : < 'A' , 'B' >

RULES
R1: p(x,y) => p(x,x)
R2: r(x,x,y) => p(y,x)
R3: s(x,y) => s(y,x)
R4: p(x,y);s(y,z) => r(x,y,z)
R5: r(x,y,y) => p(x,'C')

SATURATED FACTS BASE: 12 facts
Facts : { p('A','B') ; p('A','A') ; p('B','A') ; p('A','C') ; p('B','B') ; p('B','C') ; r('A','B','A') ; r('A','A','B') ; r('B','A','B') ; r('B','B','A') ; s('A','B') ; s('B','A') }
Terms : < 'A' , 'B' , 'C' >

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,u);r(u,u,v)
Homomorphisms found :
{u='A', v='A'}
{u='A', v='B'}
{u='B', v='A'}
{u='B', v='B'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,v);p(v,v);p(v,u)
Homomorphisms found :
{u='A', v='B'}
{u='A', v='A'}
{u='B', v='B'}
{u='B', v='A'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
r(u,u,u)
Homomorphisms found :
{u='A'}
{u='B'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,'C')
Homomorphisms found :
{u='A'}
{u='B'}

Question 2:
GENERATING KNOWLEDGE BASE: 3 facts
FACTS BASE
Facts : { p('A','B') ; s('A','B') ; s('B','B') }
Terms : < 'A' , 'B' >

RULES
R1: p(x,y) => p(x,x)
R2: r(x,x,y) => p(y,x)
R3: s(x,y) => s(y,x)
R4: p(x,y);s(y,z) => r(x,y,z)
R5: r(x,y,y) => p(x,'C')

SATURATED FACTS BASE: 15 facts
Facts : { p('A','B') ; p('A','A') ; p('B','A') ; p('A','C') ; p('B','B') ; p('B','C') ; r('A','B','B') ; r('A','B','A') ; r('A','A','B') ; r('B','A','B') ; r('B','B','B') ; r('B','B','A') ; s('A','B') ; s('B','B') ; s('B','A') }
Terms : < 'A' , 'B' , 'C' >

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,u);r(u,u,v)
Homomorphisms found :
{u='A', v='B'}
{u='A', v='A'}
{u='B', v='B'}
{u='B', v='A'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,v);p(v,v);p(v,u)
Homomorphisms found :
{u='A', v='B'}
{u='A', v='A'}
{u='B', v='B'}
{u='B', v='A'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
r(u,u,u)
Homomorphisms found :
{u='A'}
{u='B'}

Type a query to run on the knowledge base, or "print" to show the knowledge base again, or "quit" to end the program
p(u,'C')
Homomorphisms found :
{u='A'}
{u='B'}
####################################################################################################